% document ls() in easy lessons, rm()
% discuss c()

\subsection{Obtaining and Installing R}
R is free software, easily downloaded from the R Project Homepage:  \texttt{http://www.r-project.org}.  Binary versions are available for Mac and Windows systems, and source code for Linux.  Download and install the version appropriate for your system.

Users who already have R should {\em update their version}.  R and its extensions are frequently updated.  Keeping current is important to avoid nuisance errors.

Add-on packages for many purposes, contributed by many people, are a great strength of R.  For example, see this list of packages, organized by application area: \url{http://cran.r-project.org/web/views/}.  For a repository dedicated entirely to biological functionality, see: \url{http://www.bioconductor.org}.

Now install \texttt{matR}, the MG-RAST interface add-on package.  For this, use:
<<eval=FALSE>>=
install.packages("matR", repo="http://dunkirk.mcs.anl.gov/~braithwaite/R", type="source")
@
Open an R session.  Use the following command to load the \texttt{matR} package (you would use a similar command to load any other package):
<<eval=FALSE>>=
library(matR)
@
\texttt{matR} relies on various other packages.  To install these, follow the instructions provided by running this function:
<<eval=FALSE>>=
dependencies()
@
At the time of this writing, the packages relied on by \texttt{matR} are: \texttt{RJSONIO}, \texttt{ecodist}, \texttt{gplots}, \texttt{scatterplot3d}.  If the \texttt{dependencies} function doesn't complete successfully, these need to be installed one at a time, as follows:
<<eval=FALSE>>=
install.packages("RJSONIO")
install.packages("ecodist")
install.packages("gplots")
install.packages("scatterplot3d")
@
Now your R environment is ready to go!

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\pagebreak
\subsection{Introduction to R}
Here we review some basics of working with data in R, but the treatment is necessarily brief.  For detailed R language tutorials, try: \url{http://www.ats.ucla.edu/stat/r}.

For us, two kinds of data objects are essential in R:  \texttt{matrix} and \texttt{data.frame}.  First, we create a \texttt{matrix}.  The function \texttt{sample} just creates a random permutation, as shown.
<<>>=
sample(1:200)
m <- matrix(sample (1:200), nrow=20, ncol=10)
m
@
The \texttt{apply} function, below, applies the function specified by its last argument (in this case, \texttt{mean}) along the dimension of \texttt{m} specified by the second argument.  So here we calculate the row means and then the column means of \texttt{m}.
<<>>=
apply(m,1,mean)
apply(m,2,mean)
@
Generally speaking, a \texttt{data.frame} is different from a \texttt{matrix} because it may contain non-numeric data.  So, now we create a \texttt{data.frame} consisting of the {\em column means} and {\em column standard deviations} of \texttt{m}, but also containing a third, descriptive column.
<<>>=
df <- data.frame(mu=apply(m,2,mean), sigma=apply(m,2,sd))
df$sample <- paste("sample", LETTERS[1:10], sep = "-")
df
@
Suppose we wanted to reorder the columns.  Flexible indexing of objects is a great strength of R.  Here we {\em replace} the first and third columns of \texttt{df} with (respectively) its own third and first columns --- effectively, reordering them.
<<>>=
df [c(1,3)] <- df [c(3,1)]
df
@
That almost worked, but notice that while the data moved, the column {\em labels} did not.
It is possible to refer directly to the row and column labels of a \texttt{matrix} or \texttt{data.frame}, as follows.
<<>>=
rownames(df)
colnames(df)
@
Now we finish by correcting the column labels.
<<>>=
colnames(df) [c(1,3)] <- colnames(df) [c(3,1)]
df
@
Here are some commands for viewing the first elements, last elements, and overall structure of large objects.
<<>>=
head(m)
tail(m)
str(m)
str(df)
@
Finally, any introduction to R should show how it easily renders statistical graphics, as with this boxplot of the columns of \texttt{m}.
<<fig=TRUE>>=
boxplot(m)
@

\noindent There is a lot more to R, but the subset of commands shown here, together with the help tutorial (which is next), already enable many things!

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\pagebreak
\subsection{Using R Help}
In R, as with any system, it's important to know how to use the help.

First, locate the one-page quick reference for all \texttt{matR} commands:
<<eval=FALSE>>=
vignette("matR-quick-reference")
@
If that doesn't work, the quick reference is also available at: \url{http://dunkirk.mcs.anl.gov/~braithwaite/library/matR/doc/matR-quick-reference.pdf}.  It may be handy to print a copy.

Help on any R command is available with:
<<eval=FALSE>>=
?command
@
For example, try:
<<eval=FALSE>>=
?mean
?sample
?apply
@
For keyword-based help, use the double question mark, as in these examples:
<<eval=FALSE>>=
??random
??plot
@
Finally, to retrieve an index of all help topics {\em for a specific package}, use this command, replacing \texttt{matR} with the name of the relevant package:
<<eval=FALSE>>=
library(help="matR")
@
\texttt{matR} is updated regularly.  For a summary of the latest changes, see:
<<eval=FALSE>>=
vignette("matR-change-log")
@
The same document is also available at: \url{http://dunkirk.mcs.anl.gov/~braithwaite/library/matR/doc/matR-change-log.pdf}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\pagebreak
\subsection{Exporting and Importing Data; Saving Images}
This tutorial explains how to get images out of R for publications, how to bring data into R from formats such as csv, tsv, or biom; and how to save data for use in future R sessions, in Excel, or with other programs.

\texttt{matR} provides a function, \texttt{asFile()}, that conveniently exports several kinds of object in a default format.  It's not flexible but may be adequate for many purposes.  Try it on any vector or matrix object:
<<eval=FALSE>>=
asFile(cc$raw, file="saved_matrix.txt")
@
\texttt{write.table()} and \texttt{read.table()} are the workhorse commands for exporting and importing any kind of tabular data.  They have many options, as well as variants such as \texttt{read.csv()}.  The following examples show the most common options.  These functions are very flexible, though, so consult the help system to learn more.
<<eval=FALSE>>=
cc <- collection("4441679.3 4441680.3 4441682.3")
write.table(cc$raw, file="data.txt", sep="\t")
x <- read.table(file="data.txt")
x
@
The functions \texttt{save()} and \texttt{load()} store R objects in a binary format for use in later R sessions.  (By convention, these files end with \texttt{.Rda}.)  This is helpful, for example, to store a metagenome collection or the result of an analysis that is computation-intensive.  Here are some examples:
<<eval=FALSE>>=
cc <- collection("4441679.3 4441680.3 4441682.3")
p <- pco(cc)
ls()
save(cc, p, file="saved_data.Rda")
rm(cc, p)
ls()
load(file="saved_data.Rda")
ls()
@
There is an easy method to export images from an R session.  First develop the exact commands to produce the desired image interactively.  For instance, suppose we want to export the following PCoA.
<<eval=FALSE>>=
pco(Waters, main="functional level 3", col=c(rep("red",12),rep("blue",12)))
@
To produce a pdf file, simply amend the code in this way.
<<eval=FALSE>>=
pdf(filename="my_pco.pdf", width=5, height=5)
pco(Waters, main="functional level 3", col=c(rep("red",12),rep("blue",12)))
dev.off()
@
The function \texttt{pdf()} can be replaced with others, such as \texttt{png()}.  For more detail, consult the help system.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\pagebreak
\subsection{Data Type Conversions (including BIOM)}
In most programming languages, it is important to know the kind (or type or class) of data objects.  This can be a vexed subject in R.  Our purposes require:  \texttt{vector}, \texttt{matrix}, \texttt{data.frame}, \texttt{list}, \texttt{collection}, and \texttt{BIOM}.
